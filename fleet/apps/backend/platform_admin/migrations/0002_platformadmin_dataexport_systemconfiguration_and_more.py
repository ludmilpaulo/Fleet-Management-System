# Generated by Django 5.2.7 on 2025-10-11 00:53

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('platform_admin', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PlatformAdmin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_super_admin', models.BooleanField(default=False)),
                ('permissions', models.JSONField(default=list, help_text='List of specific permissions')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='platform_admin', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DataExport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('export_type', models.CharField(choices=[('users', 'Users'), ('vehicles', 'Vehicles'), ('shifts', 'Shifts'), ('inspections', 'Inspections'), ('issues', 'Issues'), ('tickets', 'Tickets'), ('companies', 'Companies'), ('full_backup', 'Full Backup')], max_length=20)),
                ('format', models.CharField(choices=[('csv', 'CSV'), ('json', 'JSON'), ('xlsx', 'Excel'), ('pdf', 'PDF')], max_length=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('filters', models.JSONField(blank=True, default=dict)),
                ('date_range_start', models.DateTimeField(blank=True, null=True)),
                ('date_range_end', models.DateTimeField(blank=True, null=True)),
                ('file_path', models.CharField(blank=True, max_length=500)),
                ('file_size', models.PositiveIntegerField(blank=True, null=True)),
                ('download_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exports', to='platform_admin.platformadmin')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SystemConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100, unique=True)),
                ('value', models.TextField()),
                ('category', models.CharField(choices=[('general', 'General'), ('security', 'Security'), ('billing', 'Billing'), ('notifications', 'Notifications'), ('features', 'Features'), ('limits', 'Limits'), ('maintenance', 'Maintenance')], default='general', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('data_type', models.CharField(choices=[('string', 'String'), ('integer', 'Integer'), ('boolean', 'Boolean'), ('json', 'JSON'), ('url', 'URL'), ('email', 'Email')], default='string', max_length=20)),
                ('is_public', models.BooleanField(default=False, help_text='Visible to non-admin users')),
                ('is_editable', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['category', 'key'],
            },
        ),
        migrations.CreateModel(
            name='SystemMaintenance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('maintenance_type', models.CharField(choices=[('database', 'Database Maintenance'), ('server', 'Server Maintenance'), ('security', 'Security Update'), ('feature', 'Feature Update'), ('backup', 'Backup Process'), ('cleanup', 'Data Cleanup')], max_length=20)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='scheduled', max_length=20)),
                ('scheduled_start', models.DateTimeField()),
                ('scheduled_end', models.DateTimeField()),
                ('actual_start', models.DateTimeField(blank=True, null=True)),
                ('actual_end', models.DateTimeField(blank=True, null=True)),
                ('estimated_downtime', models.DurationField(blank=True, null=True)),
                ('affected_services', models.JSONField(blank=True, default=list)),
                ('notify_users', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True)),
                ('issues_encountered', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='maintenance_assigned', to='platform_admin.platformadmin')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_created', to='platform_admin.platformadmin')),
            ],
            options={
                'ordering': ['-scheduled_start'],
            },
        ),
        migrations.CreateModel(
            name='AdminAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('company_create', 'Company Created'), ('company_update', 'Company Updated'), ('company_delete', 'Company Deleted'), ('company_activate', 'Company Activated'), ('company_deactivate', 'Company Deactivated'), ('user_create', 'User Created'), ('user_update', 'User Updated'), ('user_delete', 'User Deleted'), ('user_activate', 'User Activated'), ('user_deactivate', 'User Deactivated'), ('vehicle_create', 'Vehicle Created'), ('vehicle_update', 'Vehicle Updated'), ('vehicle_delete', 'Vehicle Deleted'), ('vehicle_assign', 'Vehicle Assigned'), ('shift_create', 'Shift Created'), ('shift_update', 'Shift Updated'), ('shift_delete', 'Shift Deleted'), ('shift_start', 'Shift Started'), ('shift_end', 'Shift Ended'), ('inspection_create', 'Inspection Created'), ('inspection_update', 'Inspection Updated'), ('inspection_delete', 'Inspection Deleted'), ('inspection_complete', 'Inspection Completed'), ('issue_create', 'Issue Created'), ('issue_update', 'Issue Updated'), ('issue_delete', 'Issue Deleted'), ('issue_assign', 'Issue Assigned'), ('issue_resolve', 'Issue Resolved'), ('ticket_create', 'Ticket Created'), ('ticket_update', 'Ticket Updated'), ('ticket_delete', 'Ticket Deleted'), ('ticket_assign', 'Ticket Assigned'), ('ticket_resolve', 'Ticket Resolved'), ('system_backup', 'System Backup'), ('system_restore', 'System Restore'), ('system_maintenance', 'System Maintenance'), ('system_update', 'System Update'), ('subscription_create', 'Subscription Created'), ('subscription_update', 'Subscription Updated'), ('subscription_cancel', 'Subscription Cancelled'), ('payment_process', 'Payment Processed'), ('data_export', 'Data Exported'), ('data_import', 'Data Imported'), ('data_cleanup', 'Data Cleanup'), ('data_archive', 'Data Archived')], max_length=50)),
                ('description', models.TextField()),
                ('target_model', models.CharField(blank=True, max_length=50)),
                ('target_id', models.PositiveIntegerField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actions', to='platform_admin.platformadmin')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['action_type', 'created_at'], name='platform_ad_action__2e62ce_idx'), models.Index(fields=['target_model', 'target_id'], name='platform_ad_target__f0b7ff_idx'), models.Index(fields=['created_at'], name='platform_ad_created_b4c580_idx')],
            },
        ),
    ]
